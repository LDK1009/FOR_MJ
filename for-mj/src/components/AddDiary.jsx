import styled from "@emotion/styled";
import React, { useEffect, useState } from "react";
import AddIcon from "@mui/icons-material/Add";
import { AddFoodList_Button, AddFoodList_ModalBox } from "../styles/style";
import Modal from "@mui/material/Modal";
import { TextField } from "@mui/material";
import FileSelectButton from "./FileSelectButton";
import { ref, uploadBytes } from "firebase/storage";
import { db, storage } from "../firebase-config";
import { addDoc, collection } from "firebase/firestore";

const AddDiary = ({ diaryName }) => {
  //////////////////////////////////////////////////Ïù¥Î≤§Ìä∏ Í∞êÏßÄ//////////////////////////////////////////////////

  const [formData, setFormData] = useState({
    date: "",
    descript: "",
  });

  //////////////////// DBÏóê ÏóÖÎ°úÎìúÌï† Îç∞Ïù¥ÌÑ∞ Í∞êÏßÄ
  const handleChange = (e) => {
    const { name, value } = e.target;
    // ÌòÑÏû¨ ÏûÖÎ†• ÌïÑÎìúÏùò nameÍ≥º valueÎ•º Í∞ÄÏ†∏ÏòµÎãàÎã§.
    setFormData({
      ...formData,
      [name]: value, // Ìï¥Îãπ ÌïÑÎìúÏùò Í∞íÏùÑ ÏóÖÎç∞Ïù¥Ìä∏Ìï©ÎãàÎã§.
    });
  };

  //////////////////////////////////////////////////Î™®Îã¨//////////////////////////////////////////////////
  const [modalOpen, setModalOpen] = React.useState(false);
  const handleModalOpen = () => setModalOpen(true);
  const handleModalClose = () => setModalOpen(false);

  //////////////////////////////////////////////////ÌååÏù¥Ïñ¥Ïä§ÌÜ†Ïñ¥//////////////////////////////////////////////////
  //////////////////// Îç∞Ïù¥ÌÑ∞ Ï∂îÍ∞Ä Ìï®Ïàò
  const createData = async () => {
    try {
      // dbÎùºÎäî ÏÉÅÏàòÏóê Îã¥ÏùÄ firesreÏóê Ï†ëÍ∑ºÌïòÏó¨ FoodList Ïª¨Î†âÏÖòÏóê Î¨∏ÏÑúÎ•º Ï∂îÍ∞ÄÌïúÎã§.
      // Î¨∏ÏÑúÎ™ÖÏùÄ ÎûúÎç§Ïù¥Î©∞ Î¨∏ÏÑúÏóê Îì§Ïñ¥Í∞à Îç∞Ïù¥ÌÑ∞Îäî Ï§ëÍ¥ÑÌò∏ ÎÇ¥Î∂Ä ÎÇ¥Ïö©Í≥º Í∞ôÎã§
      const docRef = await addDoc(collection(db, "AllDiary"), {
        date: formData.date,
        descript: formData.descript,
        src: storageUploadImg.name,
        timestamp: new Date(),
        classification:diaryName,
      });

      // Ïù∏ÌíãÌèº ÎπÑÏö∞Í∏∞
      setFormData({
        date: " ",
        descript: " ",
      });
      setUploadImageName("");

      // Ïù¥ÎØ∏ÏßÄ ÏóÖÎ°úÎìú
      imageUploadOnStorage();

      // ÏûëÏóÖ ÏÑ±Í≥µ Ïãú Î¨∏ÏÑúÏùò id Ï¶â, Î¨∏ÏÑúÎ™ÖÏùÑ ÏΩòÏÜî Ï∂úÎ†•ÌïúÎã§
      console.log("Document written with ID: ", docRef.id);
    } catch (e) {
      console.error("Error adding document: ", e);
    }
  };

  //////////////////////////////////////////////////Ïä§ÌÜ†Î¶¨ÏßÄ//////////////////////////////////////////////////

  //////////////////// storageÏóê ÏóÖÎ°úÎìúÌï† Ïù¥ÎØ∏ÏßÄ Îç∞Ïù¥ÌÑ∞
  const [storageUploadImg, setStorageUploadImg] = useState("");

  const [uploadImageName, setUploadImageName] = useState("");
  useEffect(() => {
    setUploadImageName(()=>storageUploadImg.name);
  }, [storageUploadImg]);
  
  //////////////////// storage ÌïòÏúÑ Ïù¥ÎØ∏ÏßÄ Ìè¥Îçî Ï∞∏Ï°∞
  const storageRef = ref(storage, `DiaryImages/${storageUploadImg.name}`); // Ïù¥ÎØ∏ÏßÄÎ•º Ï†ÄÏû•Ìï† ÎïåÏóêÎäî ÏóÖÎ°úÎìúÌïòÎäî Ïù¥ÎØ∏ÏßÄÏùò ÌååÏùºÎ™ÖÏùÑ Í≤ΩÎ°úÎ°ú Ï∂îÍ∞ÄÌïòÏó¨ image Ìè¥Îçî ÌïòÏúÑÏóê ÌååÏùºÎ™ÖÏúºÎ°ú ÌååÏùºÏù¥ Ï†ÄÏû•ÎêòÎèÑÎ°ùÌïúÎã§.

  ////////////////////////////////////////////////// Ìï®Ïàò About Storage
  ////////////////////Ïù¥ÎØ∏ÏßÄ ÏóÖÎ°úÎìú Ìï®Ïàò
  const imageUploadOnStorage = () => {
    uploadBytes(storageRef, storageUploadImg).then((snapshot) => {
      console.log("Uploaded a blob or file!");
    });
  };

  //////////////////////////////////////////////////Î†åÎçîÎßÅ//////////////////////////////////////////////////

  return (
    <div>
      <AddIcon_AddDiary onClick={handleModalOpen} />
      <Modal open={modalOpen} onClose={handleModalClose}>
        <ModalBox_AddDiary>
          <InputContainer_AddDiary>
            <Input_AddDiary
              id="standard-basic"
              label="ÎÇ†Ïßú"
              variant="standard"
              name="date"
              value={formData.date}
              onChange={handleChange}
              placeholder="ex) 2023.11.10"
            />
            <Input_AddDiary
              id="standard-basic"
              label="Ìïú Ï§Ñ ÏùºÍ∏∞"
              variant="standard"
              name="descript"
              value={formData.descript}
              onChange={handleChange}
              placeholder="ex) Îî∞ÎúªÌïú Ïö∞Îèô Íµ≠Î¨ºÏù¥Ïñ¥Îî∞üòã"
            />
            <FileSelectButton
              fileName={uploadImageName}
              onChange={(e) => {
                setStorageUploadImg(e.target.files[0]);
              }}
            />
            <AddFoodList_Button onClick={createData}>Ï∂îÍ∞Ä</AddFoodList_Button>
          </InputContainer_AddDiary>
        </ModalBox_AddDiary>
      </Modal>
    </div>
  );
};
//////////////////////////////////////////////////Ïä§ÌÉÄÏùº Ïª¥Ìè¨ÎÑåÌä∏//////////////////////////////////////////////////

export const AddIcon_AddDiary = styled(AddIcon)`
  font-size: 40px;
  color: #625b5b;
  background-color: #bcd2a1;
  border-radius: 100%;
  box-shadow: 2px 2px 5px 1px rgba(0, 0, 0, 0.25);
  &:hover {
    cursor: pointer;
    opacity: 0.9;
  }
`;

export const ModalBox_AddDiary = styled(AddFoodList_ModalBox)`
  background-color: #f5e2c8;
  border: 0px;
  box-shadow: 2px 2px 5px 1px rgba(0, 0, 0, 0.25);
`;

export const InputContainer_AddDiary = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
`;

export const Input_AddDiary = styled(TextField)`
  background-color: #f5e2c8;
  margin-bottom: 15px;
`;

export default AddDiary;
